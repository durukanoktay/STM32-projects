ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB140:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "stdlib.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define WT_MAX_ARRAY_LENGHT 8
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart3;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** float wt_temprature_array[WT_MAX_ARRAY_LENGHT] = {70, 85, 30, 60, 90, 50, 20, 40};
  49:Core/Src/main.c **** uint16_t wt_second_array[WT_MAX_ARRAY_LENGHT];
  50:Core/Src/main.c **** uint8_t wt_array_length = 8;
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** static void MX_GPIO_Init(void);
  56:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  57:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** void wt_seconds_by_temprature(float* temperature_array, uint16_t* second_array)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****     for (int i = 0; i < WT_MAX_ARRAY_LENGHT; i++) {
  67:Core/Src/main.c ****         if (temperature_array[i] > 80) {
  68:Core/Src/main.c ****             second_array[i] = 5;
  69:Core/Src/main.c ****         } else if (temperature_array[i] > 60) {
  70:Core/Src/main.c ****             second_array[i] = 4;
  71:Core/Src/main.c ****         } else if (temperature_array[i] > 40) {
  72:Core/Src/main.c ****             second_array[i] = 3;
  73:Core/Src/main.c ****         } else if (temperature_array[i] > 20) {
  74:Core/Src/main.c ****             second_array[i] = 2;
  75:Core/Src/main.c ****         }
  76:Core/Src/main.c ****         	else {
  77:Core/Src/main.c ****             second_array[i] = 1;
  78:Core/Src/main.c ****         }
  79:Core/Src/main.c ****     }
  80:Core/Src/main.c **** }
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** void wt_led_open_by_seconds(uint16_t* second_array) {
  83:Core/Src/main.c ****     for (int i = 0; i < WT_MAX_ARRAY_LENGHT; i++) {
  84:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
  85:Core/Src/main.c ****         HAL_Delay(second_array[i] * 1000);
  86:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
  87:Core/Src/main.c ****         HAL_Delay(500);
  88:Core/Src/main.c ****     }
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 3


  89:Core/Src/main.c **** }
  90:Core/Src/main.c **** /* USER CODE END 0 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /**
  93:Core/Src/main.c ****   * @brief  The application entry point.
  94:Core/Src/main.c ****   * @retval int
  95:Core/Src/main.c ****   */
  96:Core/Src/main.c **** int main(void)
  97:Core/Src/main.c **** {
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END 1 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/main.c ****   HAL_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Configure the system clock */
 113:Core/Src/main.c ****   SystemClock_Config();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Initialize all configured peripherals */
 120:Core/Src/main.c ****   MX_GPIO_Init();
 121:Core/Src/main.c ****   MX_USART3_UART_Init();
 122:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Infinite loop */
 128:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 129:Core/Src/main.c ****   while (1)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     /* USER CODE END WHILE */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   /* USER CODE END 3 */
 136:Core/Src/main.c **** }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** /**
 139:Core/Src/main.c ****   * @brief System Clock Configuration
 140:Core/Src/main.c ****   * @retval None
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c **** void SystemClock_Config(void)
 143:Core/Src/main.c **** {
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 153:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     Error_Handler();
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c **** }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief USART3 Initialization Function
 186:Core/Src/main.c ****   * @param None
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 190:Core/Src/main.c **** {
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 199:Core/Src/main.c ****   huart3.Instance = USART3;
 200:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 201:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 202:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 5


 203:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 204:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 205:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 206:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 207:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 219:Core/Src/main.c ****   * @param None
 220:Core/Src/main.c ****   * @retval None
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 223:Core/Src/main.c **** {
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 232:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 233:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 234:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 235:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 236:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 237:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 238:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 239:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 240:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 241:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 242:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****     Error_Handler();
 245:Core/Src/main.c ****   }
 246:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /**
 253:Core/Src/main.c ****   * @brief GPIO Initialization Function
 254:Core/Src/main.c ****   * @param None
 255:Core/Src/main.c ****   * @retval None
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** static void MX_GPIO_Init(void)
 258:Core/Src/main.c **** {
  28              		.loc 1 258 1 view -0
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 6


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 8DB0     		sub	sp, sp, #52
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 72
 259:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 259 3 view .LVU1
  44              		.loc 1 259 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0794     		str	r4, [sp, #28]
  47 0008 0894     		str	r4, [sp, #32]
  48 000a 0994     		str	r4, [sp, #36]
  49 000c 0A94     		str	r4, [sp, #40]
  50 000e 0B94     		str	r4, [sp, #44]
 260:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 261:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 264:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 264 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 264 3 view .LVU4
  54 0010 0194     		str	r4, [sp, #4]
  55              		.loc 1 264 3 view .LVU5
  56 0012 394B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F00402 		orr	r2, r2, #4
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 264 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F00402 		and	r2, r2, #4
  63 0022 0192     		str	r2, [sp, #4]
  64              		.loc 1 264 3 view .LVU7
  65 0024 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              		.loc 1 264 3 view .LVU8
 265:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  68              		.loc 1 265 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 265 3 view .LVU10
  71 0026 0294     		str	r4, [sp, #8]
  72              		.loc 1 265 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F08002 		orr	r2, r2, #128
  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 265 3 view .LVU12
  77 0030 1A6B     		ldr	r2, [r3, #48]
  78 0032 02F08002 		and	r2, r2, #128
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 7


  79 0036 0292     		str	r2, [sp, #8]
  80              		.loc 1 265 3 view .LVU13
  81 0038 029A     		ldr	r2, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 265 3 view .LVU14
 266:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 266 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 266 3 view .LVU16
  87 003a 0394     		str	r4, [sp, #12]
  88              		.loc 1 266 3 view .LVU17
  89 003c 1A6B     		ldr	r2, [r3, #48]
  90 003e 42F00202 		orr	r2, r2, #2
  91 0042 1A63     		str	r2, [r3, #48]
  92              		.loc 1 266 3 view .LVU18
  93 0044 1A6B     		ldr	r2, [r3, #48]
  94 0046 02F00202 		and	r2, r2, #2
  95 004a 0392     		str	r2, [sp, #12]
  96              		.loc 1 266 3 view .LVU19
  97 004c 039A     		ldr	r2, [sp, #12]
  98              	.LBE6:
  99              		.loc 1 266 3 view .LVU20
 267:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 100              		.loc 1 267 3 view .LVU21
 101              	.LBB7:
 102              		.loc 1 267 3 view .LVU22
 103 004e 0494     		str	r4, [sp, #16]
 104              		.loc 1 267 3 view .LVU23
 105 0050 1A6B     		ldr	r2, [r3, #48]
 106 0052 42F00802 		orr	r2, r2, #8
 107 0056 1A63     		str	r2, [r3, #48]
 108              		.loc 1 267 3 view .LVU24
 109 0058 1A6B     		ldr	r2, [r3, #48]
 110 005a 02F00802 		and	r2, r2, #8
 111 005e 0492     		str	r2, [sp, #16]
 112              		.loc 1 267 3 view .LVU25
 113 0060 049A     		ldr	r2, [sp, #16]
 114              	.LBE7:
 115              		.loc 1 267 3 view .LVU26
 268:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 116              		.loc 1 268 3 view .LVU27
 117              	.LBB8:
 118              		.loc 1 268 3 view .LVU28
 119 0062 0594     		str	r4, [sp, #20]
 120              		.loc 1 268 3 view .LVU29
 121 0064 1A6B     		ldr	r2, [r3, #48]
 122 0066 42F04002 		orr	r2, r2, #64
 123 006a 1A63     		str	r2, [r3, #48]
 124              		.loc 1 268 3 view .LVU30
 125 006c 1A6B     		ldr	r2, [r3, #48]
 126 006e 02F04002 		and	r2, r2, #64
 127 0072 0592     		str	r2, [sp, #20]
 128              		.loc 1 268 3 view .LVU31
 129 0074 059A     		ldr	r2, [sp, #20]
 130              	.LBE8:
 131              		.loc 1 268 3 view .LVU32
 269:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 8


 132              		.loc 1 269 3 view .LVU33
 133              	.LBB9:
 134              		.loc 1 269 3 view .LVU34
 135 0076 0694     		str	r4, [sp, #24]
 136              		.loc 1 269 3 view .LVU35
 137 0078 1A6B     		ldr	r2, [r3, #48]
 138 007a 42F00102 		orr	r2, r2, #1
 139 007e 1A63     		str	r2, [r3, #48]
 140              		.loc 1 269 3 view .LVU36
 141 0080 1B6B     		ldr	r3, [r3, #48]
 142 0082 03F00103 		and	r3, r3, #1
 143 0086 0693     		str	r3, [sp, #24]
 144              		.loc 1 269 3 view .LVU37
 145 0088 069B     		ldr	r3, [sp, #24]
 146              	.LBE9:
 147              		.loc 1 269 3 view .LVU38
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 272:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 148              		.loc 1 272 3 view .LVU39
 149 008a 1C4F     		ldr	r7, .L3+4
 150 008c 2246     		mov	r2, r4
 151 008e 44F28101 		movw	r1, #16513
 152 0092 3846     		mov	r0, r7
 153 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL0:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 275:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 155              		.loc 1 275 3 view .LVU40
 156 0098 194D     		ldr	r5, .L3+8
 157 009a 2246     		mov	r2, r4
 158 009c 4021     		movs	r1, #64
 159 009e 2846     		mov	r0, r5
 160 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 161              	.LVL1:
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /*Configure GPIO pin : USER_Btn_Pin */
 278:Core/Src/main.c ****   GPIO_InitStruct.Pin = USER_Btn_Pin;
 162              		.loc 1 278 3 view .LVU41
 163              		.loc 1 278 23 is_stmt 0 view .LVU42
 164 00a4 4FF40053 		mov	r3, #8192
 165 00a8 0793     		str	r3, [sp, #28]
 279:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 166              		.loc 1 279 3 is_stmt 1 view .LVU43
 167              		.loc 1 279 24 is_stmt 0 view .LVU44
 168 00aa 4FF48813 		mov	r3, #1114112
 169 00ae 0893     		str	r3, [sp, #32]
 280:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 280 3 is_stmt 1 view .LVU45
 171              		.loc 1 280 24 is_stmt 0 view .LVU46
 172 00b0 0994     		str	r4, [sp, #36]
 281:Core/Src/main.c ****   HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 173              		.loc 1 281 3 is_stmt 1 view .LVU47
 174 00b2 07A9     		add	r1, sp, #28
 175 00b4 1348     		ldr	r0, .L3+12
 176 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 9


 177              	.LVL2:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
 284:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin|LD2_Pin;
 178              		.loc 1 284 3 view .LVU48
 179              		.loc 1 284 23 is_stmt 0 view .LVU49
 180 00ba 44F28103 		movw	r3, #16513
 181 00be 0793     		str	r3, [sp, #28]
 285:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 182              		.loc 1 285 3 is_stmt 1 view .LVU50
 183              		.loc 1 285 24 is_stmt 0 view .LVU51
 184 00c0 0126     		movs	r6, #1
 185 00c2 0896     		str	r6, [sp, #32]
 286:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 286 3 is_stmt 1 view .LVU52
 187              		.loc 1 286 24 is_stmt 0 view .LVU53
 188 00c4 0994     		str	r4, [sp, #36]
 287:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 287 3 is_stmt 1 view .LVU54
 190              		.loc 1 287 25 is_stmt 0 view .LVU55
 191 00c6 0A94     		str	r4, [sp, #40]
 288:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 192              		.loc 1 288 3 is_stmt 1 view .LVU56
 193 00c8 07A9     		add	r1, sp, #28
 194 00ca 3846     		mov	r0, r7
 195 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL3:
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 291:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 197              		.loc 1 291 3 view .LVU57
 198              		.loc 1 291 23 is_stmt 0 view .LVU58
 199 00d0 4023     		movs	r3, #64
 200 00d2 0793     		str	r3, [sp, #28]
 292:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 292 3 is_stmt 1 view .LVU59
 202              		.loc 1 292 24 is_stmt 0 view .LVU60
 203 00d4 0896     		str	r6, [sp, #32]
 293:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 204              		.loc 1 293 3 is_stmt 1 view .LVU61
 205              		.loc 1 293 24 is_stmt 0 view .LVU62
 206 00d6 0994     		str	r4, [sp, #36]
 294:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 207              		.loc 1 294 3 is_stmt 1 view .LVU63
 208              		.loc 1 294 25 is_stmt 0 view .LVU64
 209 00d8 0A94     		str	r4, [sp, #40]
 295:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 210              		.loc 1 295 3 is_stmt 1 view .LVU65
 211 00da 07A9     		add	r1, sp, #28
 212 00dc 2846     		mov	r0, r5
 213 00de FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL4:
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 298:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 215              		.loc 1 298 3 view .LVU66
 216              		.loc 1 298 23 is_stmt 0 view .LVU67
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 10


 217 00e2 8023     		movs	r3, #128
 218 00e4 0793     		str	r3, [sp, #28]
 299:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 219              		.loc 1 299 3 is_stmt 1 view .LVU68
 220              		.loc 1 299 24 is_stmt 0 view .LVU69
 221 00e6 0894     		str	r4, [sp, #32]
 300:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 222              		.loc 1 300 3 is_stmt 1 view .LVU70
 223              		.loc 1 300 24 is_stmt 0 view .LVU71
 224 00e8 0994     		str	r4, [sp, #36]
 301:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 225              		.loc 1 301 3 is_stmt 1 view .LVU72
 226 00ea 07A9     		add	r1, sp, #28
 227 00ec 2846     		mov	r0, r5
 228 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 229              	.LVL5:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 304:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 305:Core/Src/main.c **** }
 230              		.loc 1 305 1 is_stmt 0 view .LVU73
 231 00f2 0DB0     		add	sp, sp, #52
 232              	.LCFI2:
 233              		.cfi_def_cfa_offset 20
 234              		@ sp needed
 235 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 236              	.L4:
 237 00f6 00BF     		.align	2
 238              	.L3:
 239 00f8 00380240 		.word	1073887232
 240 00fc 00040240 		.word	1073873920
 241 0100 00180240 		.word	1073879040
 242 0104 00080240 		.word	1073874944
 243              		.cfi_endproc
 244              	.LFE140:
 246              		.section	.text.wt_seconds_by_temprature,"ax",%progbits
 247              		.align	1
 248              		.global	wt_seconds_by_temprature
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	wt_seconds_by_temprature:
 254              	.LVL6:
 255              	.LFB134:
  65:Core/Src/main.c ****     for (int i = 0; i < WT_MAX_ARRAY_LENGHT; i++) {
 256              		.loc 1 65 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
  66:Core/Src/main.c ****         if (temperature_array[i] > 80) {
 261              		.loc 1 66 5 view .LVU75
 262              	.LBB10:
  66:Core/Src/main.c ****         if (temperature_array[i] > 80) {
 263              		.loc 1 66 10 view .LVU76
  66:Core/Src/main.c ****         if (temperature_array[i] > 80) {
 264              		.loc 1 66 14 is_stmt 0 view .LVU77
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 11


 265 0000 0023     		movs	r3, #0
  66:Core/Src/main.c ****         if (temperature_array[i] > 80) {
 266              		.loc 1 66 5 view .LVU78
 267 0002 0AE0     		b	.L6
 268              	.LVL7:
 269              	.L21:
  69:Core/Src/main.c ****             second_array[i] = 4;
 270              		.loc 1 69 16 is_stmt 1 view .LVU79
  69:Core/Src/main.c ****             second_array[i] = 4;
 271              		.loc 1 69 19 is_stmt 0 view .LVU80
 272 0004 9FED1B7A 		vldr.32	s14, .L26
 273 0008 F4EEC77A 		vcmpe.f32	s15, s14
 274 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 275 0010 14DD     		ble	.L22
  70:Core/Src/main.c ****         } else if (temperature_array[i] > 40) {
 276              		.loc 1 70 13 is_stmt 1 view .LVU81
  70:Core/Src/main.c ****         } else if (temperature_array[i] > 40) {
 277              		.loc 1 70 29 is_stmt 0 view .LVU82
 278 0012 0422     		movs	r2, #4
 279 0014 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 280              	.L9:
  66:Core/Src/main.c ****         if (temperature_array[i] > 80) {
 281              		.loc 1 66 46 is_stmt 1 discriminator 2 view .LVU83
  66:Core/Src/main.c ****         if (temperature_array[i] > 80) {
 282              		.loc 1 66 47 is_stmt 0 discriminator 2 view .LVU84
 283 0018 0133     		adds	r3, r3, #1
 284              	.LVL8:
 285              	.L6:
  66:Core/Src/main.c ****         if (temperature_array[i] > 80) {
 286              		.loc 1 66 21 is_stmt 1 discriminator 1 view .LVU85
  66:Core/Src/main.c ****         if (temperature_array[i] > 80) {
 287              		.loc 1 66 5 is_stmt 0 discriminator 1 view .LVU86
 288 001a 072B     		cmp	r3, #7
 289 001c 28DC     		bgt	.L25
  67:Core/Src/main.c ****             second_array[i] = 5;
 290              		.loc 1 67 9 is_stmt 1 view .LVU87
  67:Core/Src/main.c ****             second_array[i] = 5;
 291              		.loc 1 67 30 is_stmt 0 view .LVU88
 292 001e 00EB8302 		add	r2, r0, r3, lsl #2
 293 0022 D2ED007A 		vldr.32	s15, [r2]
  67:Core/Src/main.c ****             second_array[i] = 5;
 294              		.loc 1 67 12 view .LVU89
 295 0026 9FED147A 		vldr.32	s14, .L26+4
 296 002a F4EEC77A 		vcmpe.f32	s15, s14
 297 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 298 0032 E7DD     		ble	.L21
  68:Core/Src/main.c ****         } else if (temperature_array[i] > 60) {
 299              		.loc 1 68 13 is_stmt 1 view .LVU90
  68:Core/Src/main.c ****         } else if (temperature_array[i] > 60) {
 300              		.loc 1 68 29 is_stmt 0 view .LVU91
 301 0034 0522     		movs	r2, #5
 302 0036 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 303 003a EDE7     		b	.L9
 304              	.L22:
  71:Core/Src/main.c ****             second_array[i] = 3;
 305              		.loc 1 71 16 is_stmt 1 view .LVU92
  71:Core/Src/main.c ****             second_array[i] = 3;
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 12


 306              		.loc 1 71 19 is_stmt 0 view .LVU93
 307 003c 9FED0F7A 		vldr.32	s14, .L26+8
 308 0040 F4EEC77A 		vcmpe.f32	s15, s14
 309 0044 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 310 0048 03DD     		ble	.L23
  72:Core/Src/main.c ****         } else if (temperature_array[i] > 20) {
 311              		.loc 1 72 13 is_stmt 1 view .LVU94
  72:Core/Src/main.c ****         } else if (temperature_array[i] > 20) {
 312              		.loc 1 72 29 is_stmt 0 view .LVU95
 313 004a 0322     		movs	r2, #3
 314 004c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 315 0050 E2E7     		b	.L9
 316              	.L23:
  73:Core/Src/main.c ****             second_array[i] = 2;
 317              		.loc 1 73 16 is_stmt 1 view .LVU96
  73:Core/Src/main.c ****             second_array[i] = 2;
 318              		.loc 1 73 19 is_stmt 0 view .LVU97
 319 0052 B3EE047A 		vmov.f32	s14, #2.0e+1
 320 0056 F4EEC77A 		vcmpe.f32	s15, s14
 321 005a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 322 005e 03DD     		ble	.L24
  74:Core/Src/main.c ****         }
 323              		.loc 1 74 13 is_stmt 1 view .LVU98
  74:Core/Src/main.c ****         }
 324              		.loc 1 74 29 is_stmt 0 view .LVU99
 325 0060 0222     		movs	r2, #2
 326 0062 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 327 0066 D7E7     		b	.L9
 328              	.L24:
  77:Core/Src/main.c ****         }
 329              		.loc 1 77 13 is_stmt 1 view .LVU100
  77:Core/Src/main.c ****         }
 330              		.loc 1 77 29 is_stmt 0 view .LVU101
 331 0068 0122     		movs	r2, #1
 332 006a 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 333 006e D3E7     		b	.L9
 334              	.L25:
  77:Core/Src/main.c ****         }
 335              		.loc 1 77 29 view .LVU102
 336              	.LBE10:
  80:Core/Src/main.c **** 
 337              		.loc 1 80 1 view .LVU103
 338 0070 7047     		bx	lr
 339              	.L27:
 340 0072 00BF     		.align	2
 341              	.L26:
 342 0074 00007042 		.word	1114636288
 343 0078 0000A042 		.word	1117782016
 344 007c 00002042 		.word	1109393408
 345              		.cfi_endproc
 346              	.LFE134:
 348              		.section	.text.wt_led_open_by_seconds,"ax",%progbits
 349              		.align	1
 350              		.global	wt_led_open_by_seconds
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 13


 355              	wt_led_open_by_seconds:
 356              	.LVL9:
 357              	.LFB135:
  82:Core/Src/main.c ****     for (int i = 0; i < WT_MAX_ARRAY_LENGHT; i++) {
 358              		.loc 1 82 53 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
  82:Core/Src/main.c ****     for (int i = 0; i < WT_MAX_ARRAY_LENGHT; i++) {
 362              		.loc 1 82 53 is_stmt 0 view .LVU105
 363 0000 70B5     		push	{r4, r5, r6, lr}
 364              	.LCFI3:
 365              		.cfi_def_cfa_offset 16
 366              		.cfi_offset 4, -16
 367              		.cfi_offset 5, -12
 368              		.cfi_offset 6, -8
 369              		.cfi_offset 14, -4
 370 0002 0646     		mov	r6, r0
  83:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 371              		.loc 1 83 5 is_stmt 1 view .LVU106
 372              	.LBB11:
  83:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 373              		.loc 1 83 10 view .LVU107
 374              	.LVL10:
  83:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 375              		.loc 1 83 14 is_stmt 0 view .LVU108
 376 0004 0024     		movs	r4, #0
  83:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 377              		.loc 1 83 5 view .LVU109
 378 0006 17E0     		b	.L29
 379              	.LVL11:
 380              	.L30:
  84:Core/Src/main.c ****         HAL_Delay(second_array[i] * 1000);
 381              		.loc 1 84 9 is_stmt 1 discriminator 3 view .LVU110
 382 0008 0D4D     		ldr	r5, .L32
 383 000a 0122     		movs	r2, #1
 384 000c 1146     		mov	r1, r2
 385 000e 2846     		mov	r0, r5
 386 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 387              	.LVL12:
  85:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 388              		.loc 1 85 9 discriminator 3 view .LVU111
  85:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 389              		.loc 1 85 31 is_stmt 0 discriminator 3 view .LVU112
 390 0014 36F81430 		ldrh	r3, [r6, r4, lsl #1]
  85:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 391              		.loc 1 85 9 discriminator 3 view .LVU113
 392 0018 4FF47A70 		mov	r0, #1000
 393 001c 03FB00F0 		mul	r0, r3, r0
 394 0020 FFF7FEFF 		bl	HAL_Delay
 395              	.LVL13:
  86:Core/Src/main.c ****         HAL_Delay(500);
 396              		.loc 1 86 9 is_stmt 1 discriminator 3 view .LVU114
 397 0024 0022     		movs	r2, #0
 398 0026 0121     		movs	r1, #1
 399 0028 2846     		mov	r0, r5
 400 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 14


 401              	.LVL14:
  87:Core/Src/main.c ****     }
 402              		.loc 1 87 9 discriminator 3 view .LVU115
 403 002e 4FF4FA70 		mov	r0, #500
 404 0032 FFF7FEFF 		bl	HAL_Delay
 405              	.LVL15:
  83:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 406              		.loc 1 83 46 discriminator 3 view .LVU116
  83:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 407              		.loc 1 83 47 is_stmt 0 discriminator 3 view .LVU117
 408 0036 0134     		adds	r4, r4, #1
 409              	.LVL16:
 410              	.L29:
  83:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 411              		.loc 1 83 21 is_stmt 1 discriminator 1 view .LVU118
  83:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 412              		.loc 1 83 5 is_stmt 0 discriminator 1 view .LVU119
 413 0038 072C     		cmp	r4, #7
 414 003a E5DD     		ble	.L30
 415              	.LBE11:
  89:Core/Src/main.c **** /* USER CODE END 0 */
 416              		.loc 1 89 1 view .LVU120
 417 003c 70BD     		pop	{r4, r5, r6, pc}
 418              	.LVL17:
 419              	.L33:
  89:Core/Src/main.c **** /* USER CODE END 0 */
 420              		.loc 1 89 1 view .LVU121
 421 003e 00BF     		.align	2
 422              	.L32:
 423 0040 00040240 		.word	1073873920
 424              		.cfi_endproc
 425              	.LFE135:
 427              		.section	.text.Error_Handler,"ax",%progbits
 428              		.align	1
 429              		.global	Error_Handler
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	Error_Handler:
 435              	.LFB141:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /* USER CODE END 4 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** /**
 312:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 313:Core/Src/main.c ****   * @retval None
 314:Core/Src/main.c ****   */
 315:Core/Src/main.c **** void Error_Handler(void)
 316:Core/Src/main.c **** {
 436              		.loc 1 316 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ Volatile: function does not return.
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 15


 317:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 318:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 319:Core/Src/main.c ****   __disable_irq();
 442              		.loc 1 319 3 view .LVU123
 443              	.LBB12:
 444              	.LBI12:
 445              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 16


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 17


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 18


 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 19


 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 20


 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 21


 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 22


 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 23


 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 24


 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 25


 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 26


 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 27


 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 28


 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 29


 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 30


 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 31


 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 446              		.loc 2 960 27 view .LVU124
 447              	.LBB13:
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 32


 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 448              		.loc 2 962 3 view .LVU125
 449              		.syntax unified
 450              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 451 0000 72B6     		cpsid i
 452              	@ 0 "" 2
 453              		.thumb
 454              		.syntax unified
 455              	.L35:
 456              	.LBE13:
 457              	.LBE12:
 320:Core/Src/main.c ****   while (1)
 458              		.loc 1 320 3 discriminator 1 view .LVU126
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****   }
 459              		.loc 1 322 3 discriminator 1 view .LVU127
 320:Core/Src/main.c ****   while (1)
 460              		.loc 1 320 9 discriminator 1 view .LVU128
 461 0002 FEE7     		b	.L35
 462              		.cfi_endproc
 463              	.LFE141:
 465              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 466              		.align	1
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 471              	MX_USART3_UART_Init:
 472              	.LFB138:
 190:Core/Src/main.c **** 
 473              		.loc 1 190 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477 0000 08B5     		push	{r3, lr}
 478              	.LCFI4:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
 199:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 482              		.loc 1 199 3 view .LVU130
 199:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 483              		.loc 1 199 19 is_stmt 0 view .LVU131
 484 0002 0A48     		ldr	r0, .L40
 485 0004 0A4B     		ldr	r3, .L40+4
 486 0006 0360     		str	r3, [r0]
 200:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 487              		.loc 1 200 3 is_stmt 1 view .LVU132
 200:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 488              		.loc 1 200 24 is_stmt 0 view .LVU133
 489 0008 4FF4E133 		mov	r3, #115200
 490 000c 4360     		str	r3, [r0, #4]
 201:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 491              		.loc 1 201 3 is_stmt 1 view .LVU134
 201:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 492              		.loc 1 201 26 is_stmt 0 view .LVU135
 493 000e 0023     		movs	r3, #0
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 33


 494 0010 8360     		str	r3, [r0, #8]
 202:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 495              		.loc 1 202 3 is_stmt 1 view .LVU136
 202:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 496              		.loc 1 202 24 is_stmt 0 view .LVU137
 497 0012 C360     		str	r3, [r0, #12]
 203:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 498              		.loc 1 203 3 is_stmt 1 view .LVU138
 203:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 499              		.loc 1 203 22 is_stmt 0 view .LVU139
 500 0014 0361     		str	r3, [r0, #16]
 204:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 501              		.loc 1 204 3 is_stmt 1 view .LVU140
 204:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 502              		.loc 1 204 20 is_stmt 0 view .LVU141
 503 0016 0C22     		movs	r2, #12
 504 0018 4261     		str	r2, [r0, #20]
 205:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 505              		.loc 1 205 3 is_stmt 1 view .LVU142
 205:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 506              		.loc 1 205 25 is_stmt 0 view .LVU143
 507 001a 8361     		str	r3, [r0, #24]
 206:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 508              		.loc 1 206 3 is_stmt 1 view .LVU144
 206:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 509              		.loc 1 206 28 is_stmt 0 view .LVU145
 510 001c C361     		str	r3, [r0, #28]
 207:Core/Src/main.c ****   {
 511              		.loc 1 207 3 is_stmt 1 view .LVU146
 207:Core/Src/main.c ****   {
 512              		.loc 1 207 7 is_stmt 0 view .LVU147
 513 001e FFF7FEFF 		bl	HAL_UART_Init
 514              	.LVL18:
 207:Core/Src/main.c ****   {
 515              		.loc 1 207 6 view .LVU148
 516 0022 00B9     		cbnz	r0, .L39
 215:Core/Src/main.c **** 
 517              		.loc 1 215 1 view .LVU149
 518 0024 08BD     		pop	{r3, pc}
 519              	.L39:
 209:Core/Src/main.c ****   }
 520              		.loc 1 209 5 is_stmt 1 view .LVU150
 521 0026 FFF7FEFF 		bl	Error_Handler
 522              	.LVL19:
 523              	.L41:
 524 002a 00BF     		.align	2
 525              	.L40:
 526 002c 00000000 		.word	.LANCHOR0
 527 0030 00480040 		.word	1073760256
 528              		.cfi_endproc
 529              	.LFE138:
 531              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 532              		.align	1
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 537              	MX_USB_OTG_FS_PCD_Init:
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 34


 538              	.LFB139:
 223:Core/Src/main.c **** 
 539              		.loc 1 223 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543 0000 08B5     		push	{r3, lr}
 544              	.LCFI5:
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 3, -8
 547              		.cfi_offset 14, -4
 232:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 548              		.loc 1 232 3 view .LVU152
 232:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 549              		.loc 1 232 28 is_stmt 0 view .LVU153
 550 0002 0B48     		ldr	r0, .L46
 551 0004 4FF0A043 		mov	r3, #1342177280
 552 0008 0360     		str	r3, [r0]
 233:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 553              		.loc 1 233 3 is_stmt 1 view .LVU154
 233:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 554              		.loc 1 233 38 is_stmt 0 view .LVU155
 555 000a 0623     		movs	r3, #6
 556 000c 0371     		strb	r3, [r0, #4]
 234:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 557              		.loc 1 234 3 is_stmt 1 view .LVU156
 234:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 558              		.loc 1 234 30 is_stmt 0 view .LVU157
 559 000e 0222     		movs	r2, #2
 560 0010 C271     		strb	r2, [r0, #7]
 235:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 561              		.loc 1 235 3 is_stmt 1 view .LVU158
 235:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 562              		.loc 1 235 35 is_stmt 0 view .LVU159
 563 0012 0023     		movs	r3, #0
 564 0014 8371     		strb	r3, [r0, #6]
 236:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 565              		.loc 1 236 3 is_stmt 1 view .LVU160
 236:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 566              		.loc 1 236 35 is_stmt 0 view .LVU161
 567 0016 4272     		strb	r2, [r0, #9]
 237:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 568              		.loc 1 237 3 is_stmt 1 view .LVU162
 237:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 569              		.loc 1 237 35 is_stmt 0 view .LVU163
 570 0018 0122     		movs	r2, #1
 571 001a 8272     		strb	r2, [r0, #10]
 238:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 572              		.loc 1 238 3 is_stmt 1 view .LVU164
 238:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 573              		.loc 1 238 41 is_stmt 0 view .LVU165
 574 001c C372     		strb	r3, [r0, #11]
 239:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 575              		.loc 1 239 3 is_stmt 1 view .LVU166
 239:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 576              		.loc 1 239 35 is_stmt 0 view .LVU167
 577 001e 0373     		strb	r3, [r0, #12]
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 35


 240:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 578              		.loc 1 240 3 is_stmt 1 view .LVU168
 240:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 579              		.loc 1 240 44 is_stmt 0 view .LVU169
 580 0020 8273     		strb	r2, [r0, #14]
 241:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 581              		.loc 1 241 3 is_stmt 1 view .LVU170
 241:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 582              		.loc 1 241 42 is_stmt 0 view .LVU171
 583 0022 C373     		strb	r3, [r0, #15]
 242:Core/Src/main.c ****   {
 584              		.loc 1 242 3 is_stmt 1 view .LVU172
 242:Core/Src/main.c ****   {
 585              		.loc 1 242 7 is_stmt 0 view .LVU173
 586 0024 FFF7FEFF 		bl	HAL_PCD_Init
 587              	.LVL20:
 242:Core/Src/main.c ****   {
 588              		.loc 1 242 6 view .LVU174
 589 0028 00B9     		cbnz	r0, .L45
 250:Core/Src/main.c **** 
 590              		.loc 1 250 1 view .LVU175
 591 002a 08BD     		pop	{r3, pc}
 592              	.L45:
 244:Core/Src/main.c ****   }
 593              		.loc 1 244 5 is_stmt 1 view .LVU176
 594 002c FFF7FEFF 		bl	Error_Handler
 595              	.LVL21:
 596              	.L47:
 597              		.align	2
 598              	.L46:
 599 0030 00000000 		.word	.LANCHOR1
 600              		.cfi_endproc
 601              	.LFE139:
 603              		.section	.text.SystemClock_Config,"ax",%progbits
 604              		.align	1
 605              		.global	SystemClock_Config
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	SystemClock_Config:
 611              	.LFB137:
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 612              		.loc 1 143 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 80
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616 0000 00B5     		push	{lr}
 617              	.LCFI6:
 618              		.cfi_def_cfa_offset 4
 619              		.cfi_offset 14, -4
 620 0002 95B0     		sub	sp, sp, #84
 621              	.LCFI7:
 622              		.cfi_def_cfa_offset 88
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 623              		.loc 1 144 3 view .LVU178
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 624              		.loc 1 144 22 is_stmt 0 view .LVU179
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 36


 625 0004 3422     		movs	r2, #52
 626 0006 0021     		movs	r1, #0
 627 0008 07A8     		add	r0, sp, #28
 628 000a FFF7FEFF 		bl	memset
 629              	.LVL22:
 145:Core/Src/main.c **** 
 630              		.loc 1 145 3 is_stmt 1 view .LVU180
 145:Core/Src/main.c **** 
 631              		.loc 1 145 22 is_stmt 0 view .LVU181
 632 000e 0023     		movs	r3, #0
 633 0010 0293     		str	r3, [sp, #8]
 634 0012 0393     		str	r3, [sp, #12]
 635 0014 0493     		str	r3, [sp, #16]
 636 0016 0593     		str	r3, [sp, #20]
 637 0018 0693     		str	r3, [sp, #24]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 638              		.loc 1 149 3 is_stmt 1 view .LVU182
 639              	.LBB14:
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 640              		.loc 1 149 3 view .LVU183
 641 001a 0093     		str	r3, [sp]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 642              		.loc 1 149 3 view .LVU184
 643 001c 214A     		ldr	r2, .L54
 644 001e 116C     		ldr	r1, [r2, #64]
 645 0020 41F08051 		orr	r1, r1, #268435456
 646 0024 1164     		str	r1, [r2, #64]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 647              		.loc 1 149 3 view .LVU185
 648 0026 126C     		ldr	r2, [r2, #64]
 649 0028 02F08052 		and	r2, r2, #268435456
 650 002c 0092     		str	r2, [sp]
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 651              		.loc 1 149 3 view .LVU186
 652 002e 009A     		ldr	r2, [sp]
 653              	.LBE14:
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 654              		.loc 1 149 3 view .LVU187
 150:Core/Src/main.c **** 
 655              		.loc 1 150 3 view .LVU188
 656              	.LBB15:
 150:Core/Src/main.c **** 
 657              		.loc 1 150 3 view .LVU189
 658 0030 0193     		str	r3, [sp, #4]
 150:Core/Src/main.c **** 
 659              		.loc 1 150 3 view .LVU190
 660 0032 1D4B     		ldr	r3, .L54+4
 661 0034 1A68     		ldr	r2, [r3]
 662 0036 42F44042 		orr	r2, r2, #49152
 663 003a 1A60     		str	r2, [r3]
 150:Core/Src/main.c **** 
 664              		.loc 1 150 3 view .LVU191
 665 003c 1B68     		ldr	r3, [r3]
 666 003e 03F44043 		and	r3, r3, #49152
 667 0042 0193     		str	r3, [sp, #4]
 150:Core/Src/main.c **** 
 668              		.loc 1 150 3 view .LVU192
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 37


 669 0044 019B     		ldr	r3, [sp, #4]
 670              	.LBE15:
 150:Core/Src/main.c **** 
 671              		.loc 1 150 3 view .LVU193
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 672              		.loc 1 155 3 view .LVU194
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 673              		.loc 1 155 36 is_stmt 0 view .LVU195
 674 0046 0123     		movs	r3, #1
 675 0048 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 676              		.loc 1 156 3 is_stmt 1 view .LVU196
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 677              		.loc 1 156 30 is_stmt 0 view .LVU197
 678 004a 4FF4A023 		mov	r3, #327680
 679 004e 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 680              		.loc 1 157 3 is_stmt 1 view .LVU198
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 681              		.loc 1 157 34 is_stmt 0 view .LVU199
 682 0050 0223     		movs	r3, #2
 683 0052 0D93     		str	r3, [sp, #52]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 684              		.loc 1 158 3 is_stmt 1 view .LVU200
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 685              		.loc 1 158 35 is_stmt 0 view .LVU201
 686 0054 4FF48002 		mov	r2, #4194304
 687 0058 0E92     		str	r2, [sp, #56]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 688              		.loc 1 159 3 is_stmt 1 view .LVU202
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 689              		.loc 1 159 30 is_stmt 0 view .LVU203
 690 005a 0422     		movs	r2, #4
 691 005c 0F92     		str	r2, [sp, #60]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 692              		.loc 1 160 3 is_stmt 1 view .LVU204
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 693              		.loc 1 160 30 is_stmt 0 view .LVU205
 694 005e A822     		movs	r2, #168
 695 0060 1092     		str	r2, [sp, #64]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 696              		.loc 1 161 3 is_stmt 1 view .LVU206
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 697              		.loc 1 161 30 is_stmt 0 view .LVU207
 698 0062 1193     		str	r3, [sp, #68]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 699              		.loc 1 162 3 is_stmt 1 view .LVU208
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 700              		.loc 1 162 30 is_stmt 0 view .LVU209
 701 0064 0722     		movs	r2, #7
 702 0066 1292     		str	r2, [sp, #72]
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 703              		.loc 1 163 3 is_stmt 1 view .LVU210
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 704              		.loc 1 163 30 is_stmt 0 view .LVU211
 705 0068 1393     		str	r3, [sp, #76]
 164:Core/Src/main.c ****   {
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 38


 706              		.loc 1 164 3 is_stmt 1 view .LVU212
 164:Core/Src/main.c ****   {
 707              		.loc 1 164 7 is_stmt 0 view .LVU213
 708 006a 07A8     		add	r0, sp, #28
 709 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 710              	.LVL23:
 164:Core/Src/main.c ****   {
 711              		.loc 1 164 6 view .LVU214
 712 0070 98B9     		cbnz	r0, .L52
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 713              		.loc 1 171 3 is_stmt 1 view .LVU215
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 714              		.loc 1 171 31 is_stmt 0 view .LVU216
 715 0072 0F23     		movs	r3, #15
 716 0074 0293     		str	r3, [sp, #8]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 717              		.loc 1 173 3 is_stmt 1 view .LVU217
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 718              		.loc 1 173 34 is_stmt 0 view .LVU218
 719 0076 0223     		movs	r3, #2
 720 0078 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 721              		.loc 1 174 3 is_stmt 1 view .LVU219
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 722              		.loc 1 174 35 is_stmt 0 view .LVU220
 723 007a 0023     		movs	r3, #0
 724 007c 0493     		str	r3, [sp, #16]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 725              		.loc 1 175 3 is_stmt 1 view .LVU221
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 726              		.loc 1 175 36 is_stmt 0 view .LVU222
 727 007e 4FF4A053 		mov	r3, #5120
 728 0082 0593     		str	r3, [sp, #20]
 176:Core/Src/main.c **** 
 729              		.loc 1 176 3 is_stmt 1 view .LVU223
 176:Core/Src/main.c **** 
 730              		.loc 1 176 36 is_stmt 0 view .LVU224
 731 0084 4FF48053 		mov	r3, #4096
 732 0088 0693     		str	r3, [sp, #24]
 178:Core/Src/main.c ****   {
 733              		.loc 1 178 3 is_stmt 1 view .LVU225
 178:Core/Src/main.c ****   {
 734              		.loc 1 178 7 is_stmt 0 view .LVU226
 735 008a 0521     		movs	r1, #5
 736 008c 02A8     		add	r0, sp, #8
 737 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 738              	.LVL24:
 178:Core/Src/main.c ****   {
 739              		.loc 1 178 6 view .LVU227
 740 0092 20B9     		cbnz	r0, .L53
 182:Core/Src/main.c **** 
 741              		.loc 1 182 1 view .LVU228
 742 0094 15B0     		add	sp, sp, #84
 743              	.LCFI8:
 744              		.cfi_remember_state
 745              		.cfi_def_cfa_offset 4
 746              		@ sp needed
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 39


 747 0096 5DF804FB 		ldr	pc, [sp], #4
 748              	.L52:
 749              	.LCFI9:
 750              		.cfi_restore_state
 166:Core/Src/main.c ****   }
 751              		.loc 1 166 5 is_stmt 1 view .LVU229
 752 009a FFF7FEFF 		bl	Error_Handler
 753              	.LVL25:
 754              	.L53:
 180:Core/Src/main.c ****   }
 755              		.loc 1 180 5 view .LVU230
 756 009e FFF7FEFF 		bl	Error_Handler
 757              	.LVL26:
 758              	.L55:
 759 00a2 00BF     		.align	2
 760              	.L54:
 761 00a4 00380240 		.word	1073887232
 762 00a8 00700040 		.word	1073770496
 763              		.cfi_endproc
 764              	.LFE137:
 766              		.section	.text.main,"ax",%progbits
 767              		.align	1
 768              		.global	main
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 773              	main:
 774              	.LFB136:
  97:Core/Src/main.c **** 
 775              		.loc 1 97 1 view -0
 776              		.cfi_startproc
 777              		@ Volatile: function does not return.
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 08B5     		push	{r3, lr}
 781              	.LCFI10:
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 3, -8
 784              		.cfi_offset 14, -4
 106:Core/Src/main.c **** 
 785              		.loc 1 106 3 view .LVU232
 786 0002 FFF7FEFF 		bl	HAL_Init
 787              	.LVL27:
 113:Core/Src/main.c **** 
 788              		.loc 1 113 3 view .LVU233
 789 0006 FFF7FEFF 		bl	SystemClock_Config
 790              	.LVL28:
 120:Core/Src/main.c ****   MX_USART3_UART_Init();
 791              		.loc 1 120 3 view .LVU234
 792 000a FFF7FEFF 		bl	MX_GPIO_Init
 793              	.LVL29:
 121:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 794              		.loc 1 121 3 view .LVU235
 795 000e FFF7FEFF 		bl	MX_USART3_UART_Init
 796              	.LVL30:
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 797              		.loc 1 122 3 view .LVU236
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 40


 798 0012 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 799              	.LVL31:
 800              	.L57:
 129:Core/Src/main.c ****   {
 801              		.loc 1 129 3 discriminator 1 view .LVU237
 134:Core/Src/main.c ****   /* USER CODE END 3 */
 802              		.loc 1 134 3 discriminator 1 view .LVU238
 129:Core/Src/main.c ****   {
 803              		.loc 1 129 9 discriminator 1 view .LVU239
 804 0016 FEE7     		b	.L57
 805              		.cfi_endproc
 806              	.LFE136:
 808              		.global	wt_array_length
 809              		.global	wt_second_array
 810              		.global	wt_temprature_array
 811              		.global	hpcd_USB_OTG_FS
 812              		.global	huart3
 813              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
 814              		.align	2
 815              		.set	.LANCHOR1,. + 0
 818              	hpcd_USB_OTG_FS:
 819 0000 00000000 		.space	1252
 819      00000000 
 819      00000000 
 819      00000000 
 819      00000000 
 820              		.section	.bss.huart3,"aw",%nobits
 821              		.align	2
 822              		.set	.LANCHOR0,. + 0
 825              	huart3:
 826 0000 00000000 		.space	72
 826      00000000 
 826      00000000 
 826      00000000 
 826      00000000 
 827              		.section	.bss.wt_second_array,"aw",%nobits
 828              		.align	2
 831              	wt_second_array:
 832 0000 00000000 		.space	16
 832      00000000 
 832      00000000 
 832      00000000 
 833              		.section	.data.wt_array_length,"aw"
 836              	wt_array_length:
 837 0000 08       		.byte	8
 838              		.section	.data.wt_temprature_array,"aw"
 839              		.align	2
 842              	wt_temprature_array:
 843 0000 00008C42 		.word	1116471296
 844 0004 0000AA42 		.word	1118437376
 845 0008 0000F041 		.word	1106247680
 846 000c 00007042 		.word	1114636288
 847 0010 0000B442 		.word	1119092736
 848 0014 00004842 		.word	1112014848
 849 0018 0000A041 		.word	1101004800
 850 001c 00002042 		.word	1109393408
 851              		.text
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 41


 852              	.Letext0:
 853              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/machine/_de
 854              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/sys/_stdint
 855              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 856              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 857              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 858              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 859              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 860              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 861              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 862              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 863              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 864              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 865              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 866              		.file 16 "<built-in>"
ARM GAS  /var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:20     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:239    .text.MX_GPIO_Init:00000000000000f8 $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:247    .text.wt_seconds_by_temprature:0000000000000000 $t
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:253    .text.wt_seconds_by_temprature:0000000000000000 wt_seconds_by_temprature
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:342    .text.wt_seconds_by_temprature:0000000000000074 $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:349    .text.wt_led_open_by_seconds:0000000000000000 $t
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:355    .text.wt_led_open_by_seconds:0000000000000000 wt_led_open_by_seconds
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:423    .text.wt_led_open_by_seconds:0000000000000040 $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:428    .text.Error_Handler:0000000000000000 $t
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:434    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:466    .text.MX_USART3_UART_Init:0000000000000000 $t
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:471    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:526    .text.MX_USART3_UART_Init:000000000000002c $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:532    .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:537    .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:599    .text.MX_USB_OTG_FS_PCD_Init:0000000000000030 $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:604    .text.SystemClock_Config:0000000000000000 $t
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:610    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:761    .text.SystemClock_Config:00000000000000a4 $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:767    .text.main:0000000000000000 $t
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:773    .text.main:0000000000000000 main
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:836    .data.wt_array_length:0000000000000000 wt_array_length
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:831    .bss.wt_second_array:0000000000000000 wt_second_array
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:842    .data.wt_temprature_array:0000000000000000 wt_temprature_array
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:818    .bss.hpcd_USB_OTG_FS:0000000000000000 hpcd_USB_OTG_FS
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:825    .bss.huart3:0000000000000000 huart3
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:814    .bss.hpcd_USB_OTG_FS:0000000000000000 $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:821    .bss.huart3:0000000000000000 $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:828    .bss.wt_second_array:0000000000000000 $d
/var/folders/3f/97v4jx99335dpqmnp4yp92440000gn/T//cc8ulhRv.s:839    .data.wt_temprature_array:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_Delay
HAL_UART_Init
HAL_PCD_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
